执行：
1.直接执行run.sh文件

框架说明：
1.代码在api/base_api.py中封装使用方法，避免对driver的直接操作
2.代码在api/util.py中完成对token的初始化
3.datas中存放testcases所需的测试数据
4.steps中存放每个接口的所有请求地址，请求方法，请求体

框架优点：
1.业务层与接口实现层分离，方便代码维护
2.测试步骤驱动，使得接口传参修改只需修改yaml文件，而不需修改底层代码
3.测试数据驱动，使得只需写一条testcase即可跑多条相似用例
4.token处理，在util提供了示例，根据业务进行修改

增加测试用例：
在testcases目录中添加，因为代码使用pytest测试框架，所以添加时需注意py文件与方法以test_开头，类名以Test开头

增加测试api及步骤：
在api中加入py文件及方法，并在steps中增加yaml文件，在yaml文件中编写测试步骤

增加测试数据：
在datas中增加yaml文件，在yaml文件中编写测试数据，并在testcases中调用